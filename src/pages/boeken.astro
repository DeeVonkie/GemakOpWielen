---
import Layout from '../layouts/Layout.astro';
import CustomDropdown from '../components/CustomDropdown.astro';
import CustomTimeInput from '../components/CustomTimeInput.astro';
import { trailers } from '../data/trailers';
import { eventTypeOptions } from '../data/config';
import { contactDetails } from '../data/config';

// Get the selected trailer from URL parameters
const { searchParams } = Astro.url;
const selectedTrailer = searchParams.get('trailer');

const trailerOptions = trailers.map(trailer => ({
  value: trailer.slug,
  label: trailer.title,
  image: trailer.images // Assuming each trailer object has an image property
}));

const selectedTrailerData = trailers.find(trailer => trailer.slug === selectedTrailer);
---

<Layout
    title="Boeken"
    description="Boek direct een toilet trailer voor uw evenement bij Gemak op Wielen."
>
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="max-w-7xl mx-auto">
        <main class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">
          <div class="text-center py-16 lg:py-24">
            <h1 class="text-4xl tracking-tight font-extrabold text-gray-900 sm:text-5xl md:text-6xl">
              <span class="block">Boek een</span>
              <span class="block text-primary-700">toiletwagen</span>
            </h1>
            <p class="mt-3 text-base text-gray-500 sm:mt-5 sm:text-lg sm:max-w-xl sm:mx-auto md:mt-5 md:text-xl">
              Vul het formulier in om een toiletwagen te reserveren voor uw evenement of feest.
            </p>
          </div>
        </main>
      </div>

    <div class="mt-12 grid grid-cols-1 gap-16 lg:grid-cols-2">
      <div>
        <div class="bg-white p-8 rounded-lg shadow space-y-8">
          <div id="selected-trailer">
            {selectedTrailerData && (
              <div>
                <h2 class="text-2xl font-bold text-gray-900">Uw geselecteerde toiletwagen</h2>
                <div class="mt-4">
                  <img id="selected-trailer-image" src={selectedTrailerData.images[0]} alt={selectedTrailerData.title} class="w-full rounded-md shadow-sm" />
                </div>
              </div>
            )}
          </div>
          <div>
            <h2 class="text-2xl font-bold text-gray-900">Contactgegevens</h2>
            <dl class="mt-6 space-y-6">
              <div>
                <dt class="sr-only">Telefoonnummer</dt>
                <dd class="flex">
                  <svg class="h-6 w-6 text-primary-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
                  </svg>
                  <span class="ml-3 text-lg text-gray-600">
                    <a href=`tel:${contactDetails.phone.href}` class="hover:text-primary-700">{contactDetails.phone.label}</a>
                  </span>
                </dd>
              </div>
              <div>
                <dt class="sr-only">Email</dt>
                <dd class="flex">
                  <svg class="h-6 w-6 text-primary-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                  </svg>
                  <span class="ml-3 text-lg text-gray-600">
                    <a href=`mailto:${contactDetails.email.href}` class="hover:text-primary-700">{contactDetails.email.label}</a>
                  </span>
                </dd>
              </div>
              <div>
                <dt class="sr-only">Adres</dt>
                <dd class="flex">
                  <svg class="h-6 w-6 text-primary-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                  </svg>
                  <span class="ml-3 text-lg text-gray-600">
                    {contactDetails.address.street}<br />
                    {contactDetails.address.postalCode} {contactDetails.address.city}
                  </span>
                </dd>
              </div>
              <div>
                <dt class="sr-only">Werkplaats</dt>
                <dd class="flex">
                  <svg class="h-6 w-6 text-primary-700" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4" />
                  </svg>
                  <span class="ml-3 text-lg text-gray-600">
                    <strong>Werkplaats:</strong><br />
                    {contactDetails.visitAdress.street}<br />
                    {contactDetails.visitAdress.postalCode} {contactDetails.visitAdress.city}
                  </span>
                </dd>
              </div>
            </dl>
          </div>
        </div>
      </div>

      <div>
        <form class="bg-white p-8 rounded-lg shadow space-y-6" id="booking-form" onsubmit="event => event.preventDefault();return false">
          <div id="form-error" class="hidden p-4 text-sm text-red-700 bg-red-100 rounded-md"></div>
          <div id="form-success" class="hidden p-4 text-sm text-green-700 bg-green-100 rounded-md"></div>
          
          <div class="space-y-8">
            <CustomDropdown
              id="trailerSelection"
              name="trailer"
              label="Selecteer Trailer"
              options={trailerOptions}
              required={true}
              defaultValue={selectedTrailer || ''}
              onChange="updateSelectedTrailer"
            />

            {(selectedTrailerData && selectedTrailerData.finished === false) && (
              <div id="trailer-warning-message" class="mt-4 p-4 text-sm text-red-700 bg-red-100 rounded-md">
                Let op! Momenteel is deze toiletwagen nog in aanbouw. We kunnen uw boeking nog niet garanderen.
              </div>
            )}

            <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
              <div>
                <label for="startDate" class="block text-sm font-medium text-gray-700 mb-2">Startdatum</label>
                <input
                    type="date"
                    name="startDate"
                    id="startDate"
                    required
                    min={new Date().toISOString().split('T')[0]}
                    class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                />
              </div>

              <div>
                <label for="endDate" class="block text-sm font-medium text-gray-700 mb-2">Einddatum</label>
                <input
                    type="date"
                    name="endDate"
                    id="endDate"
                    required
                    min={new Date().toISOString().split('T')[0]}
                    class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                />
              </div>
            </div>

            <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-2">
              <CustomTimeInput
                  id="startTime"
                  name="startTime"
                  label="Starttijd"
                  required={true}
              />

              <CustomTimeInput
                  id="endTime"
                  name="endTime"
                  label="Eindtijd"
                  required={true}
              />
            </div>

            <div class="space-y-6">
              <CustomDropdown
                  id="eventType"
                  name="eventType"
                  label="Type Evenement"
                  options={eventTypeOptions}
                  required={true}
              />

              <div>
                <label for="expectedGuests" class="block text-sm font-medium text-gray-700 mb-2">Verwacht aantal gasten</label>
                <input
                    type="number"
                    name="expectedGuests"
                    id="expectedGuests"
                    min="1"
                    required
                    class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                />
              </div>
            </div>

            <div>
              <label for="location" class="block text-sm font-medium text-gray-700 mb-2">Locatie</label>
              <input
                  type="text"
                  name="location"
                  id="location"
                  required
                  class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                  placeholder="Straat, huisnummer, postcode en plaats"
              />
            </div>

            <div>
              <label class="text-base font-medium text-gray-900">Extra services</label>
              <div class="mt-4 space-y-4">
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input
                        id="cleaning"
                        name="cleaning"
                        type="checkbox"
                        class="h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                    />
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="cleaning" class="font-medium text-gray-700">Schoonmaakservice</label>
                    <p class="text-gray-500">Extra tussentijdse schoonmaak van de toiletwagen</p>
                  </div>
                </div>
                <!-- <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input
                        id="watertank"
                        name="watertank"
                        type="checkbox"
                        class="h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                    />
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="watertank" class="font-medium text-gray-700">Extra Watertank</label>
                    <p class="text-gray-500">Voor locaties zonder wateraansluiting</p>
                  </div>
                </div> -->
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input
                        id="septictank"
                        name="septictank"
                        type="checkbox"
                        class="h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                    />
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="watertank" class="font-medium text-gray-700">Septictank</label>
                    <p class="text-gray-500">Voor locaties zonder afvoermogelijkheid</p>
                  </div>
                </div>
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input
                        id="generator"
                        name="generator"
                        type="checkbox"
                        class="h-4 w-4 rounded border-gray-300 text-primary-600 focus:ring-primary-500"
                    />
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="generator" class="font-medium text-gray-700">Stroomaggregaat</label>
                    <p class="text-gray-500">Voor locaties zonder stroomvoorziening</p>
                  </div>
                </div>
              </div>
            </div>

            <div class="space-y-6">
              <div>
                <label class="text-base font-medium text-gray-900">Contactgegevens</label>
                <div class="mt-4 grid grid-cols-1 gap-y-6 sm:grid-cols-2 sm:gap-x-4">
                  <div>
                    <label for="firstName" class="block text-sm font-medium text-gray-700 mb-2">Voornaam</label>
                    <input
                        type="text"
                        name="firstName"
                        id="firstName"
                        placeholder="Uw voornaam"
                        required
                        class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                    />
                  </div>

                  <div>
                    <label for="lastName" class="block text-sm font-medium text-gray-700 mb-2">Achternaam</label>
                    <input
                        type="text"
                        name="lastName"
                        id="lastName"
                        placeholder="Uw achternaam"
                        required
                        class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                    />
                  </div>

                  <div>
                    <label for="email" class="block text-sm font-medium text-gray-700 mb-2">Email</label>
                    <input
                        type="email"
                        name="email"
                        id="email"
                        placeholder="Uw e-mailadres"
                        required
                        class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                    />
                  </div>

                  <div>
                    <label for="phone" class="block text-sm font-medium text-gray-700 mb-2">Telefoonnummer</label>
                    <input
                        type="tel"
                        name="phone"
                        id="phone"
                        placeholder="Uw telefoonnummer"
                        required
                        class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                    />
                  </div>
                </div>
              </div>

              <div>
                <label for="comments" class="block text-sm font-medium text-gray-700 mb-2">Opmerkingen</label>
                <textarea
                    id="comments"
                    name="comments"
                    rows="4"
                    class="block w-full rounded-md shadow-sm focus-ring sm:text-sm py-3 px-4"
                    placeholder="Eventuele extra wensen of opmerkingen"
                ></textarea>
              </div>
            </div>
          </div>

          <div class="flex justify-end space-x-4">
            <button
                type="submit"
                class="inline-flex justify-center py-3 px-6 border border-transparent shadow-sm text-base font-medium rounded-md text-white bg-primary-700 hover:bg-primary-800 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
            >
              Aanvraag versturen
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { getTrailerById } from '../data/trailers';
  import { getLabelByValue } from '../data/config';

  // Add date validation
  const startDateInput = document.getElementById('startDate') as HTMLInputElement;
  const endDateInput = document.getElementById('endDate') as HTMLInputElement;

  startDateInput?.addEventListener('change', () => {
    if (endDateInput) {
      endDateInput.min = startDateInput.value;
    }
  });

  const get = (id) => document.getElementById(id) || { value: '' }
  const errorDiv = document.getElementById('form-error') as HTMLDivElement;
  const successDiv = document.getElementById('form-success') as HTMLDivElement;
  const formDiv = document.getElementById('booking-form') as HTMLFormElement;

  const submitForm = () => {
    sendmail()
  }

  window.updateSelectedTrailer = (selectedTrailer) => {
    const trailerData = getTrailerById(selectedTrailer);
    const trailerImage = trailerData ? trailerData.images[0] : '';
    const trailerImageElement = document.getElementById('selected-trailer-image') as HTMLImageElement;
    const selectedTrailerDiv = document.getElementById('selected-trailer') as HTMLDivElement;
    const warningMessageElement = document.getElementById('trailer-warning-message') as HTMLDivElement;

    if (trailerImageElement && trailerImage !== '') {
      selectedTrailerDiv.classList.remove('hidden');
      trailerImageElement.src = trailerImage;
      trailerImageElement.alt = trailerData.title;
    } else if (trailerImage === '') {
      selectedTrailerDiv.classList.add('hidden');
    } else {
      if (selectedTrailerDiv && trailerImage !== '') {
        selectedTrailerDiv.classList.remove('hidden');
        selectedTrailerDiv.innerHTML = `
          <div>
            <h2 class="text-2xl font-bold text-gray-900">Uw geselecteerde toiletwagen</h2>
            <div class="mt-4">
              <img id="selected-trailer-image" src="${trailerImage}" alt="${trailerData.title}" class="w-full rounded-md shadow-sm" />
            </div>
          </div>
        `;
      }
    }

    // Show or hide the warning message based on the trailer's finished status
    if (trailerData && !trailerData.finished) {
      warningMessageElement.classList.remove('hidden');
    } else {
      warningMessageElement.classList.add('hidden');
    }
  }

  // save and retrieve generic formdata from localstorage
  const getFormData = () => {
    const store = Object.create(null)
    store.trailer = (get('trailerSelection') as HTMLInputElement)?.value;
    store.trailerLabel = (getTrailerById((get('trailerSelection') as HTMLInputElement)?.value)?.title);
    store.startDate = (get('startDate') as HTMLInputElement)?.value;
    store.endDate = (get('endDate') as HTMLInputElement)?.value;
    store.startTime = (get('startTime') as HTMLInputElement)?.value;
    store.endTime = (get('endTime') as HTMLInputElement)?.value;
    store.eventType = (get('eventType') as HTMLInputElement)?.value;
    store.eventTypeLabel = (getLabelByValue((get('eventType') as HTMLInputElement)?.value));
    store.location = (get('location') as HTMLInputElement)?.value;
    store.expectedGuests = (get('expectedGuests') as HTMLInputElement)?.value;
    store.cleaning = (get('cleaning') as HTMLInputElement)?.checked ? true : false;
    store.septictank = (get('septictank') as HTMLInputElement)?.checked ? true : false;
    store.generator = (get('generator') as HTMLInputElement)?.checked ? true : false;

    store.firstName = (get('firstName') as HTMLInputElement)?.value;
    store.lastName = (get('lastName') as HTMLInputElement)?.value;
    store.email = (get('email') as HTMLInputElement)?.value;
    store.phone = (get('phone') as HTMLInputElement)?.value;
    store.comments = (get('comments') as HTMLInputElement)?.value;
    return store;
  }

  // This kicks thing of, should really be on window.onload but...
  const submitBtn = document.querySelector('[type="submit"]');
  submitBtn?.addEventListener('click', submitForm);

  // Reset messages
  errorDiv.classList.add('hidden');
  successDiv.classList.add('hidden');
  ;[...document.querySelectorAll('input')][0]?.focus();

  // Form submission
  const sendmail = async () => {
    const formData = getFormData();
    try {
      const response = await fetch('/api/submit-booking.json', {
        method: 'POST',
        body: JSON.stringify(formData)
      });

      if (!response.ok) {
        const errorData = await response.json();
        console.error('Error data:', errorData);
        errorDiv.textContent = 'Let op! ' + errorData.error || 'Er is een fout opgetreden bij het versturen van uw aanvraag.';
        errorDiv.classList.remove('hidden');
        window.scrollTo(0, 0);
        return;
      }

      const data = await response.json();
      successDiv.textContent = 'Bedankt voor uw aanvraag. We nemen zo spoedig mogelijk contact met u op.';
      successDiv.classList.remove('hidden');
      errorDiv.classList.add('hidden');
      window.scrollTo(0, 0);
      formDiv.reset();

    } catch (error) {
      console.error('Error:', error);
      errorDiv.textContent = 'Er is een netwerkfout opgetreden, neem contact op via info@gemakopwielen.nl';
      errorDiv.classList.remove('hidden');
      window.scrollTo(0, 0);
    }
  };
</script>

<style>
  input[type="date"] {
    -webkit-appearance: none;
    appearance: none;
  }

  .focus-ring {
    @apply focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-0;
    outline: none !important;
    -webkit-tap-highlight-color: transparent;
  }
</style>